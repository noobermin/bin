#!/home/noobermin/t/bin/sbcl-script
(defun $foreach (l f)
  (map nil f l))
(defun requires (&rest l)
  ($foreach l #'require))
(defun imports (&rest l)
  ($foreach l #'import))
(defun spit (a)
  (format t "~a~%" a))

(requires 'local-time 'asdf 'cl-ppcre 'cl-interpol 'parse-number)
(cl-interpol:enable-interpol-syntax)
(imports 'cl-ppcre:scan-to-strings)

(defun get-arg (i)
  (elt (first (parse-argv *posix-argv*)) i))
(defun -1st (l) (first (last l)))

(defun file-read (f)
  (with-open-file (s f)
                  (loop for line = (read-line s nil)
                        while line collect line)))
(defvar *nrx* "[+-]?(?:\\d*\\.\\d+|\\d+\\.?\\d*)(?:e[+-]?\\d+)?")
(defvar *line-rx* #?"(${*nrx*}) *(${*nrx*}) *\"(.*)\"")
(defun line-to-bg (l)
  (multiple-value-bind (_ vals) (scan-to-strings *line-rx*  l)
    (list
     (cons
      (parse-number:parse-number (elt vals 0) ) (parse-number:parse-number (elt vals 1)))
     (elt vals 2))))
(defun get-bgs (f)
  (let ((lines (file-read f)))
    (loop for line in lines collect (line-to-bg line))))

(defun file-read (f)
  (with-open-file (s f)
                  (loop for line = (read-line s nil)
                        while line collect line)))
(imports 'local-time:timestamp-hour 'local-time:timestamp-minute 'local-time:now)
(loop
 (let* ((hour (+ (timestamp-hour (now)) (/ (timestamp-minute (now)) 60.0)))
        (bgs (get-bgs "/home/noobermin/r/bgs.txt"))
        (bg (-1st (find-if (lambda (i) (let* ((r (first i))
                                              (a (car r))
                                              (b (cdr r)))
                                         (and (> hour a) (> b hour))))
                           bgs))))
   (format t "hour: ~a~%" hour)
   (format t "current file: ~a~%" bg)
   (asdf:run-shell-command "feh --bg-fill ~a" bg))
 (sleep (* 60 15)))
